/**
 * Copyright (C) 2010-2013 Alibaba Group Holding Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.alibaba.rocketmq.common.message;

import java.util.HashSet;


public class MessageConst {
    /**
     * æ¶ˆæ?¯å…³é”®è¯?ï¼Œå¤šä¸ªKeyç”¨KEY_SEPARATORéš”å¼€ï¼ˆæŸ¥è¯¢æ¶ˆæ?¯ä½¿ç”¨ï¼‰
     */
    public static final String PROPERTY_KEYS = "KEYS";
    /**
     * æ¶ˆæ?¯æ ‡ç­¾ï¼Œå?ªæ”¯æŒ?è®¾ç½®ä¸€ä¸ªTagï¼ˆæœ?åŠ¡ç«¯æ¶ˆæ?¯è¿‡æ»¤ä½¿ç”¨ï¼‰
     */
    public static final String PROPERTY_TAGS = "TAGS";
    /**
     * æ˜¯å?¦ç­‰å¾…æœ?åŠ¡å™¨å°†æ¶ˆæ?¯å­˜å‚¨å®Œæ¯•å†?è¿”å›žï¼ˆå?¯èƒ½æ˜¯ç­‰å¾…åˆ·ç›˜å®Œæˆ?æˆ–è€…ç­‰å¾…å?Œæ­¥å¤?åˆ¶åˆ°å…¶ä»–æœ?åŠ¡å™¨ï¼‰
     */
    public static final String PROPERTY_WAIT_STORE_MSG_OK = "WAIT";
    /**
     * æ¶ˆæ?¯å»¶æ—¶æŠ•é€’æ—¶é—´çº§åˆ«ï¼Œ0è¡¨ç¤ºä¸?å»¶æ—¶ï¼Œå¤§äºŽ0è¡¨ç¤ºç‰¹å®šå»¶æ—¶çº§åˆ«ï¼ˆå…·ä½“çº§åˆ«åœ¨æœ?åŠ¡å™¨ç«¯å®šä¹‰ï¼‰
     */
    public static final String PROPERTY_DELAY_TIME_LEVEL = "DELAY";

    /**
     * å†…éƒ¨ä½¿ç”¨
     */
    public static final String PROPERTY_RETRY_TOPIC = "RETRY_TOPIC";
    public static final String PROPERTY_REAL_TOPIC = "REAL_TOPIC";
    public static final String PROPERTY_REAL_QUEUE_ID = "REAL_QID";
    public static final String PROPERTY_TRANSACTION_PREPARED = "TRAN_MSG";
    public static final String PROPERTY_PRODUCER_GROUP = "PGROUP";
    public static final String PROPERTY_MIN_OFFSET = "MIN_OFFSET";
    public static final String PROPERTY_MAX_OFFSET = "MAX_OFFSET";
    public static final String PROPERTY_BUYER_ID = "BUYER_ID";
    public static final String PROPERTY_ORIGIN_MESSAGE_ID = "ORIGIN_MESSAGE_ID";
    public static final String PROPERTY_TRANSFER_FLAG = "TRANSFER_FLAG";
    public static final String PROPERTY_CORRECTION_FLAG = "CORRECTION_FLAG";
    public static final String PROPERTY_MQ2_FLAG = "MQ2_FLAG";
    public static final String PROPERTY_RECONSUME_TIME = "RECONSUME_TIME";
<<<<<<< HEAD
    public static final String PROPERTY_MSG_REGION = "MSG_REGION";
=======
    public static final String PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX="UNIQ_KEY";

>>>>>>> origin/norepeat
    public static final String KEY_SEPARATOR = " ";

    public static final HashSet<String> systemKeySet = new HashSet<String>();
    static {
        systemKeySet.add(PROPERTY_MSG_REGION);
        systemKeySet.add(PROPERTY_KEYS);
        systemKeySet.add(PROPERTY_TAGS);
        systemKeySet.add(PROPERTY_WAIT_STORE_MSG_OK);
        systemKeySet.add(PROPERTY_DELAY_TIME_LEVEL);
        systemKeySet.add(PROPERTY_RETRY_TOPIC);
        systemKeySet.add(PROPERTY_REAL_TOPIC);
        systemKeySet.add(PROPERTY_REAL_QUEUE_ID);
        systemKeySet.add(PROPERTY_TRANSACTION_PREPARED);
        systemKeySet.add(PROPERTY_PRODUCER_GROUP);
        systemKeySet.add(PROPERTY_MIN_OFFSET);
        systemKeySet.add(PROPERTY_MAX_OFFSET);
        systemKeySet.add(PROPERTY_BUYER_ID);
        systemKeySet.add(PROPERTY_ORIGIN_MESSAGE_ID);
        systemKeySet.add(PROPERTY_TRANSFER_FLAG);
        systemKeySet.add(PROPERTY_CORRECTION_FLAG);
        systemKeySet.add(PROPERTY_MQ2_FLAG);
        systemKeySet.add(PROPERTY_RECONSUME_TIME);
        systemKeySet.add(PROPERTY_UNIQ_CLIENT_MESSAGE_ID_KEYIDX);
    }
}
