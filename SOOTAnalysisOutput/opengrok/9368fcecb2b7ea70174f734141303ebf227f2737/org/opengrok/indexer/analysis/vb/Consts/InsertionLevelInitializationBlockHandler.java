package org.opengrok.indexer.analysis.vb;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

@SuppressWarnings("PMD.AvoidThrowingRawExceptionTypes")
public final class Consts {

    public static final Set<String> reservedKeywords;

    public static final Set<String> directives;

    static {
        HashSet<String> kwds = new HashSet<>();
        populateKeywordSet(kwds);
        reservedKeywords = Collections.unmodifiableSet(kwds);
        directives = Set.of("#const", "#else", "#elseif", "#end", "#if");
    }

    private Consts() {
    }

    private static void populateKeywordSet(Set<String> kwd) {
        kwd.clear();
        kwd.add("addhandler");
        kwd.add("addressof");
        kwd.add("alias");
        kwd.add("and");
        kwd.add("andalso");
        kwd.add("as");
        kwd.add("boolean");
        kwd.add("byref");
        kwd.add("byte");
        kwd.add("byval");
        kwd.add("call");
        kwd.add("case");
        kwd.add("catch");
        kwd.add("cbool");
        kwd.add("cbyte");
        kwd.add("cchar");
        kwd.add("cdate");
        kwd.add("cdec");
        kwd.add("cdbl");
        kwd.add("char");
        kwd.add("cint");
        kwd.add("class");
        kwd.add("clng");
        kwd.add("cobj");
        kwd.add("const");
        kwd.add("continue");
        kwd.add("csbyte");
        kwd.add("cshort");
        kwd.add("csng");
        kwd.add("cstr");
        kwd.add("ctype");
        kwd.add("cuint");
        kwd.add("culng");
        kwd.add("cushort");
        kwd.add("date");
        kwd.add("decimal");
        kwd.add("declare");
        kwd.add("default");
        kwd.add("delegate");
        kwd.add("dim");
        kwd.add("directcast");
        kwd.add("do");
        kwd.add("double");
        kwd.add("each");
        kwd.add("else");
        kwd.add("elseif");
        kwd.add("end");
        kwd.add("endif");
        kwd.add("enum");
        kwd.add("erase");
        kwd.add("error");
        kwd.add("event");
        kwd.add("exit");
        kwd.add("false");
        kwd.add("finally");
        kwd.add("for");
        kwd.add("friend");
        kwd.add("function");
        kwd.add("get");
        kwd.add("gettype");
        kwd.add("global");
        kwd.add("gosub");
        kwd.add("goto");
        kwd.add("handles");
        kwd.add("if");
        kwd.add("implements");
        kwd.add("imports");
        kwd.add("in");
        kwd.add("inherits");
        kwd.add("integer");
        kwd.add("interface");
        kwd.add("is");
        kwd.add("isnot");
        kwd.add("let");
        kwd.add("lib");
        kwd.add("like");
        kwd.add("long");
        kwd.add("loop");
        kwd.add("me");
        kwd.add("mod");
        kwd.add("module");
        kwd.add("mustinherit");
        kwd.add("mustoverride");
        kwd.add("mybase");
        kwd.add("myclass");
        kwd.add("namespace");
        kwd.add("narrowing");
        kwd.add("new");
        kwd.add("next");
        kwd.add("not");
        kwd.add("nothing");
        kwd.add("notinheritable");
        kwd.add("notoverridable");
        kwd.add("object");
        kwd.add("of");
        kwd.add("on");
        kwd.add("operator");
        kwd.add("option");
        kwd.add("optional");
        kwd.add("or");
        kwd.add("orelse");
        kwd.add("overloads");
        kwd.add("overridable");
        kwd.add("overrides");
        kwd.add("paramarray");
        kwd.add("partial");
        kwd.add("private");
        kwd.add("property");
        kwd.add("protected");
        kwd.add("public");
        kwd.add("raiseevent");
        kwd.add("readonly");
        kwd.add("redim");
        kwd.add("rem");
        kwd.add("removehandler");
        kwd.add("resume");
        kwd.add("return");
        kwd.add("sbyte");
        kwd.add("select");
        kwd.add("set");
        kwd.add("shadows");
        kwd.add("shared");
        kwd.add("short");
        kwd.add("single");
        kwd.add("static");
        kwd.add("step");
        kwd.add("stop");
        kwd.add("string");
        kwd.add("structure");
        kwd.add("sub");
        kwd.add("synclock");
        kwd.add("then");
        kwd.add("throw");
        kwd.add("to");
        kwd.add("true");
        kwd.add("try");
        kwd.add("trycast");
        kwd.add("typeof");
        kwd.add("variant");
        kwd.add("wend");
        kwd.add("uinteger");
        kwd.add("ulong");
        kwd.add("ushort");
        kwd.add("using");
        kwd.add("when");
        kwd.add("while");
        kwd.add("widening");
        kwd.add("with");
        kwd.add("withevents");
        kwd.add("writeonly");
        kwd.add("xor");
        kwd.add("getxmlnamespace");
        kwd.add("out");
    }
}